package szp.model;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.List;

/**
 * This is the EmployeeModel class that represents an employee in the system.
 * It is annotated with @Data, a Lombok annotation to create all the getters, setters, equals, hash, and toString methods, based on the fields.
 * It is also annotated with @Entity, indicating that it is a JPA entity.
 * @Table(name = "employee") is used to provide the details of the table that this entity will be mapped to.
 * @NoArgsConstructor, @AllArgsConstructor and @Builder are Lombok annotations to generate constructors and builder method.
 */
@Data
@Entity
@Table(name = "employee")
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class EmployeeModel {

    /**
     * This is the id of the employee.
     * It is generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "employee_id")
    private Integer employeeId;

    /**
     * This is the first name of the employee.
     */
    @Column(name = "first_name", nullable = false)
    private String firstName;

    /**
     * This is the second name of the employee.
     */
    @Column(name = "second_name")
    private String secondName;

    /**
     * This is the last name of the employee.
     */
    @Column(name = "last_name", nullable = false)
    private String lastName;

    /**
     * This is the birth date of the employee.
     */
    @Column(name = "birth_date", nullable = false)
    private java.sql.Date  birthDate;

    /**
     * This is the pesel (Polish national identification number) of the employee.
     */
    @Column(name = "pesel", nullable = false)
    private String pesel;

    /**
     * This is the login of the employee.
     */
    @Column(name = "login", nullable = false)
    private String login;

    /**
     * This is the password of the employee.
     */
    @Column(name = "password", nullable = false)
    private String password;

    /**
     * This is the role of the employee.
     * It is an enumerated type.
     */
    @Enumerated(EnumType.STRING)
    @Column(name = "role", nullable = false)
    private Role role;

    /**
     * This is the list of assignments associated with the employee.
     * It is a one-to-many relationship.
     */
    @OneToMany(mappedBy = "employee", cascade = CascadeType.ALL)
    private List<AssignmentModel> assignments;

    /**
     * This is the list of vacations associated with the employee.
     * It is a one-to-many relationship.
     */
    @OneToMany(mappedBy = "employee", cascade = CascadeType.ALL)
    private List<VacationModel> vacations;

}